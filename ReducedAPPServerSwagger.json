{
  "swagger": "2.0",
  "info": {
    "version": "9.2.0.0",
    "title": "API Documentation"
  },
  "basePath": "/AppServer/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Single Entities",
      "description": "Create, read, update, and delete single entities"
    },
    {
      "name": "Multiple Entities",
      "description": "Create, read, update, and delete single entities"
    }
  ],
  "paths": {
    "/entities/OrgRoot": {
      "get": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Get Root Role Class",
        "description": "\"Get the UID of the Root Role Class.\n We look for the 'Applicaiton Role' which is the root. It is always the same UID in each envirtoment. OUTPUT : UID_OrgRoot \"\n",
        "parameters": [
          {
            "in": "query",
            "name": "where",
            "description": "Ident_OrgRoot = 'Application Role'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection entry",
            "schema": {
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "example": "/AppServer/api/entity/OrgRoot/QER-V-AERole"
                  },
                  "display": {
                    "type": "string",
                    "example": "Application role"
                  },
                  "longDisplay": {
                    "type": "string",
                    "example": "Application role"
                  },
                  "state": {
                    "type": "integer",
                    "example": 1
                  },
                  "values": {
                        "properties": {
                      "Ident_OrgRoot": {
                        "type": "string",
                        "example": "Application role"
                      },
                      "UID_OrgRoot": {
                        "type": "string",
                        "example": "QER-V-AERole"
                      },
                      "XMarkedForDeletion": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "displayValues": {
                        "properties": {
                      "Ident_OrgRoot": {
                        "type": "string",
                        "example": "Application role"
                      },
                      "XMarkedForDeletion": {
                        "type": "string",
                        "example": " "
                      }
                    }
                  }
                }
            }
          }
        }
      }
    },
    "/entities/AERole": {
      "get": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Get OIM Application Role",
        "description": "\"Get the UID of the Application Role for ITShop.\n We look for the Product Owners which is the root role for the Portal. It is always the same UID in each envirtoment. OUTPUT : UID_AERole \"\n",
        "parameters": [
          {
            "in": "query",
            "name": "where",
            "description": "FullPath = N'Request & Fulfillment\\IT Shop\\Product owners'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection entry",
            "schema": {
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "example": "/AppServer/api/entity/AERole/QER-AEROLE-ITSHOPADMIN-OWNER"
                  },
                  "display": {
                    "type": "string",
                    "example": "Product owners"
                  },
                  "longDisplay": {
                    "type": "string",
                    "example": "Request & Fulfillment\\IT Shop\\Product owners"
                  },
                  "state": {
                    "type": "integer",
                    "example": 1
                  },
                  "values": {
                        "properties": {
                      "FullPath": {
                        "type": "string",
                        "example": "Request & Fulfillment\\IT Shop\\Product owners"
                      },
                      "Ident_AERole": {
                        "type": "string",
                        "example": "Product owners"
                      },
                      "UID_AERole": {
                        "type": "string",
                        "example": "QER-AEROLE-ITSHOPADMIN-OWNER"
                      },
                      "XMarkedForDeletion": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "displayValues": {
                        "properties": {
                      "FullPath": {
                        "type": "string",
                        "example": "Request & Fulfillment\\IT Shop\\Product owners"
                      },
                       "Ident_AERole": {
                        "type": "string",
                        "example": "Product owners"
                      },
                      "XMarkedForDeletion": {
                        "type": "string",
                        "example": " "
                      }
                    }
                  }
                }
            }
          }
        }
      }
    },
    "/entities/Person": {
      "get": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Get employees",
        "description": "\"Get employee objects based on a where clause..\nIn this case we use the emailaddress to look for them but other columns/data can be used.OUTPUT: UID_Person.\"\n",
        "parameters": [
          {
            "in": "query",
            "name": "where",
            "description": "DefaultEmailAddress in ('Andrea.Schuepfer@axpo.com','jorge.prado@axpo.com')",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection entry",
            "schema": {
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "example": "/AppServer/api/entity/Person/fb2929cc-38a0-4486-80ab-0d78a6eccc6b"
                  },
                  "display": {
                    "type": "string",
                    "example": "Prado Jorge MTI-I EXTERN (TJORGPRAD)"
                  },
                  "longDisplay": {
                    "type": "string",
                    "example": "Prado Jorge MTI-I EXTERN (TJORGPRAD)"
                  },
                  "state": {
                    "type": "integer",
                    "example": 1
                  },
                  "values": {
                        "properties": {
                      "CentralAccount": {
                        "type": "string",
                        "example": "TJORGPRAD"
                      },
                      "InternalName": {
                        "type": "string",
                        "example": "Prado Jorge MTI-I EXTERN"
                      },
                      "UID_Person": {
                        "type": "string",
                        "example": "fb2929cc-38a0-4486-80ab-0d78a6eccc6b"
                      },
                      "XMarkedForDeletion": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "displayValues": {
                        "properties": {
                      "XMarkedForDeletion": {
                        "type": "string",
                        "example": " "
                      }
                    }
                  }
                  
                }
            }
          }
        }
      }
    },
    "/entities/AccProductGroup": {
      "get": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Get a Service Category",
        "description": "\"Look for the service category.\n OUTPUT: UID_AccProductGroup\"\n",
        "parameters": [
          {
            "in": "query",
            "name": "where",
            "description": "Ident_AccProductGroup = 'Abstraction Layers'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection entry",
            "schema": {
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "example": "/AppServer/api/entity/AccProductGroup/e2302534-5bab-431a-8cd3-cb9ac3bca76d"
                  },
                  "display": {
                    "type": "string",
                    "example": "Abstraction Layers"
                  },
                  "longDisplay": {
                    "type": "string",
                    "example": "Abstraction Layers"
                  },
                  "state": {
                    "type": "integer",
                    "example": 1
                  },
                  "values": {
                        "properties": {
                            "FullPath": {
                              "type": "string",
                              "example": "Abstraction Layers"
                            },
                            "Ident_AccProductGroup": {
                              "type": "string",
                              "example": "Abstraction Layers"
                            },
                            "UID_AccProductGroup": {
                              "type": "string",
                              "example": "e2302534-5bab-431a-8cd3-cb9ac3bca76d"
                            },
                            "XMarkedForDeletion": {
                              "type": "integer",
                              "format": "int32"
                            }
                    }
                  },
                  "displayValues": {
                        "properties": {
                            "FullPath": {
                              "type": "string",
                              "example": "Abstraction Layers"
                            },
                            "Ident_AccProductGroup": {
                              "type": "string",
                              "example": "Abstraction Layers"
                            },
                            "XMarkedForDeletion": {
                              "type": "string",
                              "example": " "
                            }
                    }
                  }
                  
                }
            }
          }
        }
      }
    },
     "/entities/EsetType": {
      "get": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Get the System Role Type",
        "description": "\"For now we are using only the 'Common' category, this can change in the comming weeks.\nOUTPUT: UID_ESetType.\"\n",
        "parameters": [
          {
            "in": "query",
            "name": "where",
            "description": "Ident_EsetType = 'Common'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection entry",
            "schema": {
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "example": "/AppServer/api/entity/ESetType/RMS-A929BA90EC799EF35DCA57AD916E4873"
                  },
                  "display": {
                    "type": "string",
                    "example": "Common"
                  },
                  "longDisplay": {
                    "type": "string",
                    "example": "Common"
                  },
                  "state": {
                    "type": "integer",
                    "example": 1
                  },
                  "values": {
                        "properties": {
                            "Ident_ESetType": {
                              "type": "string",
                              "example": "Common"
                            },
                            "UID_ESetType": {
                              "type": "string",
                              "example": "RMS-A929BA90EC799EF35DCA57AD916E4873"
                            },
                            "XMarkedForDeletion": {
                              "type": "integer",
                              "format": "int32"
                            }
                    }
                  },
                  "displayValues": {
                        "properties": {
                            "Ident_ESetType": {
                              "type": "string",
                              "example": "Common"
                            },
                            "XMarkedForDeletion": {
                              "type": "string",
                              "example": " "
                            }
                    }
                  }
                  
                }
            }
          }
        }
      }
    },
    "/entities/ITShopOrg": {
      "get": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Get ITShop Structure",
        "description": "\"Get Where the products will be placed in the Portal, this may change based on the approval workflow to be used and the customer..\nOUTPUT: UID_ITShopOrg .\"\n",
        "parameters": [
          {
            "in": "query",
            "name": "where",
            "description": "FullPath = N'AXPO Applications\\AXPO Everyone\\Self Service Approval'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection entry",
            "schema": {
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "example": "/AppServer/api/entity/ITShopOrg/4768af52-cffe-4591-8e33-e5f424ae588a"
                  },
                  "display": {
                    "type": "string",
                    "example": "Self Service Approval"
                  },
                  "longDisplay": {
                    "type": "string",
                    "example": "AXPO Applications\\AXPO Everyone\\Self Service Approval"
                  },
                  "state": {
                    "type": "integer",
                    "example": 1
                  },
                  "values": {
                        "properties": {
                            "FullPath": {
                              "type": "string",
                              "example": "AXPO Applications\\AXPO Everyone\\Self Service Approval"
                            },
                            "Ident_Org": {
                              "type": "string",
                              "example": "Self Service Approval"
                            },
                            "UID_ITShopOrg": {
                              "type": "string",
                              "example": "4768af52-cffe-4591-8e33-e5f424ae588a"
                            },
                            "XMarkedForDeletion": {
                              "type": "integer",
                              "format": "int32"
                            }
                    }
                  },
                  "displayValues": {
                        "properties": {
                            "FullPath": {
                              "type": "string",
                              "example": "AXPO Applications\\AXPO Everyone\\Self Service Approval"
                            },
                            "Ident_Org": {
                              "type": "string",
                              "example": "Self Service Approval"
                            },
                            "XMarkedForDeletion": {
                              "type": "string",
                              "example": " "
                            }
                    }
                  }
                  
                }
            }
          }
        }
      }
    },
    "/entities/AADGroup": {
      "get": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Get the Entra ID Groups on IAM",
        "description": "\"Look for the Entra ID groups on the IAM tables to add them later to a system role. We need the XObjectKey to add the groups to a system role, and that column is not provided by the API by default so it have to eb specifically requested in the displaycolumns.\nOUTPUT: XObjectKey.\"\n",
        "parameters": [
          {
            "in": "query",
            "name": "where",
            "description": "DisplayName = 'GROUPNAME' and UID_AADOrganization in (Select UID_AADOrganization FROM AADOrganization WHERE DisplayName = 'Axpo Services AG' )",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "displayColumns",
            "description": "XObjectKey",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection entry",
            "schema": {
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "example": "/AppServer/api/entity/AADGroup/0223b4c7-7c9b-4e7a-8111-943f26403d5c"
                  },
                  "display": {
                    "type": "string",
                    "example": " CL-AXPO-D365-ACCESS-Instance-AXPODE"
                  },
                  "longDisplay": {
                    "type": "string",
                    "example": " CL-AXPO-D365-ACCESS-Instance-AXPODE (6877b8e0-01b0-457d-b684-0c0cfc291412)"
                  },
                  "state": {
                    "type": "integer",
                    "example": 1
                  },
                  "values": {
                        "properties": {
                            "DisplayName": {
                              "type": "string",
                              "example": " CL-AXPO-D365-ACCESS-Instance-AXPODE"
                            },
                            "UID_AADGroup": {
                              "type": "string",
                              "example": "0223b4c7-7c9b-4e7a-8111-943f26403d5c"
                            },
                            "UID_AADOrganization": {
                              "type": "string",
                              "example": "6877b8e0-01b0-457d-b684-0c0cfc291412"
                            },
                            "XMarkedForDeletion": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "XObjectKey": {
                              "type": "string",
                              "example": "<Key><T>AADGroup</T><P>0223b4c7-7c9b-4e7a-8111-943f26403d5c</P></Key>"
                            }
                    }
                  },
                  "displayValues": {
                        "properties": {
                            "XMarkedForDeletion": {
                              "type": "string",
                              "example": " "
                            }
                    }
                  }
                  
                }
            }
          }
        }
      }
    },
    "/entity/AERole": {
      "post": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Create a Applicatrion Role",
        "description": "\"Create a role for Abstraction Layers. Only has to be done once per enviroment. Commentary is a fixed value as in the example. Ident_AERole will be the name shown for the role. KEYS: Ident_AERole,UID_ParentAERole INPUTS: UID_OrgRoot, UID_ParentAERole \"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Values to change",
            "required": true,
            "schema": {
              "properties": {
                "values": {
                  "properties": {
                    "Ident_AERole": {
                      "type": "string",
                      "example": "Abstraction Layers Owners"
                    },
                    "UID_OrgRoot": {
                      "type": "string",
                      "example": "QER-V-AERole"
                    },
                    "UID_ParentAERole": {
                      "type": "string",
                      "example": "QER-AEROLE-ITSHOPADMIN-OWNER"
                    },
                    "Commentary": {
                      "type": "string",
                      "example": "AbstractionLayer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entity",
            "schema": {
              "properties": {
                "uid": {
                  "type": "string",
                  "example": "6e487fe8-54a1-4adb-91a8-7437442360d8"
                },
                "uri": {
                  "type": "string",
                  "example": "/AppServer/api/entity/AERole/6e487fe8-54a1-4adb-91a8-7437442360d8"
                },
                "state": {
                  "type": "integer",
                  "format": "int32"
                },
                "processId": {
                  "type": "string",
                  "example": "00bfd14d-1748-49f8-8230-6ae0b723acda"
                }
              }
            }
          }
        }
      }
    },
    "/entity/AccProductGroup": {
      "post": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Create a Service Category",
        "description": "\"Create a Parent Service Category. Only has to be done once per enviroment. Ident_AccProductGroup is the name of the Service Category. KEYS: Ident_AccProductGroup INPUTS: UID_AccProductGroup (-> UID_AccProductGroupParent) \"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Values to change",
            "required": true,
            "schema": {
              "properties": {
                "values": {
                  "properties": {
                    "Ident_AccProductGroup": {
                      "type": "string",
                      "example": "Abstraction Layers"
                    },
                    "UID_AccProductGroupParent": {
                      "type": "string",
                      "example" : "e2302534-5bab-431a-8cd3-cb9ac3bca76d"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entity",
            "schema": {
              "properties": {
                "uid": {
                  "type": "string",
                  "example": "e2302534-5bab-431a-8cd3-cb9ac3bca76d"
                },
                "uri": {
                  "type": "string",
                  "example": "/AppServer/api/entity/AccProductGroup/e2302534-5bab-431a-8cd3-cb9ac3bca76d"
                },
                "state": {
                  "type": "integer",
                  "format": "int32"
                },
                "processId": {
                  "type": "string",
                  "example": "0dc57a4b-2c89-43b9-bd4d-5002150a446b"
                }
              }
            }
          }
        }
      }
    },
    "/entity/AccProduct": {
      "post": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Create a Service Item",
        "description": "\"Create a Service Item. This is the product itslef on the Portal. Ident_AccProduct is the name of the Service Item. IsInactive has be decided to be always set to true, so products are created disabled. KEYS: Ident_AccProduct INPUTS: UID_AccProductGroup,UID_OrgRuler (UID from Owners role created) \"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Values to change",
            "required": true,
            "schema": {
              "properties": {
                "values": {
                  "properties": {
                    "Ident_AccProduct": {
                      "type": "string",
                      "example": "Application 1 - Product 1 (Abstraction Layer Test)"
                    },
                    "UID_AccProductGroup": {
                      "type": "string",
                      "example" : "f6c38da2-e9bb-4301-840f-d3f346a46898"
                    },
                    "UID_OrgRuler": {
                      "type": "string",
                      "example": "fe674090-acf2-4eb6-8430-785ffe2fc5d5"
                    },
                    "Description": {
                      "type": "string",
                      "example": "Product Description"
                    },
                    "IsInactive": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entity",
            "schema": {
              "properties": {
                "uid": {
                  "type": "string",
                  "example": "70f52df0-22e7-4ce4-8a41-ccde839a42c6"
                },
                "uri": {
                  "type": "string",
                  "example": "/AppServer/api/entity/AccProduct/70f52df0-22e7-4ce4-8a41-ccde839a42c6"
                },
                "state": {
                  "type": "integer",
                  "format": "int32"
                },
                "processId": {
                  "type": "string",
                  "example": "a0837569-2ecc-4bdb-ab66-4cd85f65e984"
                }
              }
            }
          }
        }
      }
    },
        "/entity/DialogMultiLanguage": {
      "post": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Create a single entity",
        "description": "\"Add translation to products on the Portal. SourceType is always Data, EntryValue is where to put the translation. UID_DialogColumn for Porduct description is always 'QER-5012221B72BE4EB19A7E828859AF3959' for translating other text the UID has to be looked for first. UID_DialogCulture is 'QBM-CULT-de-CH' for German and 'QBM-CULT-en-US' for English. EntryKey is '<Product Name> Description' .KEYS: UID_DialogColumn,UID_DialogCulture,EntryKey INPUTS: UID_DialogColumn,EntryKey  \"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Values to change",
            "required": true,
            "schema": {
              "properties": {
                "values": {
                  "properties": {
                    "UID_DialogColumn": {
                      "type": "string",
                      "example": "QER-5012221B72BE4EB19A7E828859AF3959"
                    },
                    "UID_DialogCulture": {
                      "type": "string",
                      "example" : "QBM-CULT-de-CH"
                    },
                    "EntryKey": {
                      "type": "string",
                      "example": "Product Description"
                    },
                    "EntryValue": {
                      "type": "string",
                      "example": "Schweizerdeutsch Beschreibungstext"
                    },
                    "SourceType": {
                      "type": "string",
                      "example": "Data"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entity",
            "schema": {
              "properties": {
                "uid": {
                  "type": "string",
                  "example": "CCC-105884599445FD4E990106A6C548C86F"
                },
                "uri": {
                  "type": "string",
                  "example": "/AppServer/api/entity/DialogMultiLanguage/CCC-105884599445FD4E990106A6C548C86F"
                },
                "state": {
                  "type": "integer",
                  "format": "int32"
                },
                "processId": {
                  "type": "string",
                  "example": "709077c4-e2d3-4803-ac4c-27119c6d70e4"
                }
              }
            }
          }
        }
      }
    },
    "/entity/Eset": {
      "post": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Create a single entity",
        "description": "\"Create a System Role. Description is always '<Product name> Description' so later on this can be translated, this value will be the EntryKey in translation. KEYS:Ident_ESet INPUTS: UID_EsetType,UID_AccProduct,  \"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Values to change",
            "required": true,
            "schema": {
              "properties": {
                "values": {
                  "properties": {
                    "Ident_Eset": {
                      "type": "string",
                      "example": "Abstraction Layers Owners"
                    },
                    "UID_EsetType": {
                      "type": "string",
                      "example": "RMS-A929BA90EC799EF35DCA57AD916E4873"
                    },
                    "UID_AccProduct": {
                      "type": "string",
                      "example": "70f52df0-22e7-4ce4-8a41-ccde839a42c6"
                    },
                    "DisplayName": {
                      "type": "string",
                      "example": "Application 1 - Product 1 (Abstraction Layer Test)"
                    },
                    "Description": {
                      "type": "string",
                      "example": "Product Description"
                    },
                    "IsForITShop": {
                      "type": "boolean",
                      "example" : true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entity",
            "schema": {
              "properties": {
                "uid": {
                  "type": "string",
                  "example": "9383b4bb-2c9c-41b2-a723-b7066b053fd2"
                },
                "uri": {
                  "type": "string",
                  "example": "/AppServer/api/entity/ESet/9383b4bb-2c9c-41b2-a723-b7066b053fd2"
                },
                "state": {
                  "type": "integer",
                  "format": "int32"
                },
                "processId": {
                  "type": "string",
                  "example": "1550b21d-a165-4144-ad75-941a61e1d760"
                }
              }
            }
          }
        }
      }
    },
    "/entity/ITShopOrgHasESet": {
      "post": {
        "tags": [
          "Single Entities"
        ],
        "summary": "System Role Assigment",
        "description": "\"Link the System Role to the product. KEYS: UID_ESet,UID_ITShopOrg INPUTS:  UID_ESet,UID_ITShopOrg  \"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Values to change",
            "required": true,
            "schema": {
              "properties": {
                "values": {
                  "properties": {
                    "UID_Eset": {
                      "type": "string",
                      "example": "9383b4bb-2c9c-41b2-a723-b7066b053fd2"
                    },
                    "UID_ITShopOrg": {
                      "type": "string",
                      "example": "4768af52-cffe-4591-8e33-e5f424ae588a"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entity",
            "schema": {
              "properties": {
                "uid": {
                  "type": "string",
                  "example": "9383b4bb-2c9c-41b2-a723-b7066b053fd2;4768af52-cffe-4591-8e33-e5f424ae588a"
                },
                "uri": {
                  "type": "string",
                  "example": "/AppServer/api/entity/ITShopOrgHasESet/9383b4bb-2c9c-41b2-a723-b7066b053fd2;4768af52-cffe-4591-8e33-e5f424ae588a"
                },
                "state": {
                  "type": "integer",
                  "format": "int32"
                },
                "processId": {
                  "type": "string",
                  "example": "5dc31d94-758f-4056-9618-c9e898cc48f7"
                }
              }
            }
          }
        }
      }
    },
    "/entity/ESetHasEntitlement": {
      "post": {
        "tags": [
          "Single Entities"
        ],
        "summary": "Create assigment for System Role",
        "description": "\"Link the Entra ID group to the system role. KEYS: UID_ESet,Entitlement INPUTS:  UID_ESet,XObjectKey(->Entitlement)  \"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Values to change",
            "required": true,
            "schema": {
              "properties": {
                "values": {
                  "properties": {
                    "UID_Eset": {
                      "type": "string",
                      "example": "9383b4bb-2c9c-41b2-a723-b7066b053fd2"
                    },
                    "Entitlement": {
                      "type": "string",
                      "example": "<Key><T>AADGroup</T><P>0223b4c7-7c9b-4e7a-8111-943f26403d5c</P></Key>"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entity",
            "schema": {
              "properties": {
                "uid": {
                  "type": "string",
                  "example": "0A55AD3D-0776-7077-50F8-B314F4A66FA3"
                },
                "uri": {
                  "type": "string",
                  "example": "/AppServer/api/entity/ESetHasEntitlement/0A55AD3D-0776-7077-50F8-B314F4A66FA3"
                },
                "state": {
                  "type": "integer",
                  "format": "int32"
                },
                "processId": {
                  "type": "string",
                  "example": "a076e3eb-36f4-40ae-8a14-9d7c9cf909c3"
                }
              }
            }
          }
        }
      }
    },
    "/entities": {
      "post": {
        "tags": [
          "Multiple Entities"
        ],
        "summary": "Create a batch of single entities.",
        "description": "\"In the case of assigment of owners to role KEYS: UID_AERole, UID_Person INPUTS:  UID_AERole, UID_Person\"\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Entities to insert",
            "required": true,
            "schema": {
              "properties": {
                "entities": {
                  "type": "array",
                  "items": {
                    "required": [
                      "table"
                    ],
                    "properties": {
                      "table": {
                        "type": "string",
                        "example":"PersonInAERole"
                      },
                      "values": {
                              "properties": {
                                "UID_AERole": {
                                  "type": "string",
                                  "example":"fe674090-acf2-4eb6-8430-785ffe2fc5d5"
                                },
                                "UID_Person": {
                                  "type": "string",
                                  "example":"db4aa6c1-d79f-45cd-8d8c-0bb2458478a8"
                                }
                              }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created new entities",
            "schema": {
              "properties": {
                "entities": {
                  "type": "array",
                  "items": {
                              "properties": {
                                "uid": {
                                  "type": "string",
                                  "example":"fe674090-acf2-4eb6-8430-785ffe2fc5d5"
                                },
                                "uri": {
                                  "type": "string",
                                  "example":"db4aa6c1-d79f-45cd-8d8c-0bb2458478a8"
                                }
                              }
                  }
                },
                "processId": {
                                  "type": "string",
                                  "example":"29f70683-bde2-40de-9192-778d66f98456"
                                }
              }
            }
          }
        }
      }
    }
  }
}
